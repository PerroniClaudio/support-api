services:
  nginx:
    image: nginx:alpine
    container_name: spreetzitt-nginx-prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/default.prod.conf:/etc/nginx/conf.d/default.conf:ro
      - ./sslcert:/etc/nginx/ssl:ro
      - static_files:/var/www/html/public:ro
    networks:
      - app-network
    depends_on:
      backend:
        condition: service_healthy
      frontend:
        condition: service_healthy
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /var/cache/nginx:noexec,nosuid,size=100m
      - /var/run:noexec,nosuid,size=100m

  backend:
    build:
      context: .
      dockerfile: ./docker/prod.backend.dockerfile
    restart: unless-stopped
    container_name: spreetzitt-backend-prod
    volumes:
      - ./php/supervisord.prod.conf:/etc/supervisor/conf.d/supervisord.conf:ro
      - ./support-api:/var/www/html:ro
      - static_files:/var/www/html/public
      - storage_data:/var/www/html/storage
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - APP_KEY=${APP_KEY}
      - DB_CONNECTION=${DB_CONNECTION:-mysql}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT:-3306}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - MEILISEARCH_HOST=http://meilisearch:7700
      - MEILISEARCH_KEY=${MEILISEARCH_KEY}
      - MAIL_MAILER=${MAIL_MAILER}
      - MAIL_HOST=${MAIL_HOST}
      - MAIL_PORT=${MAIL_PORT}
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - LOG_CHANNEL=stderr
      - SESSION_DRIVER=redis
      - CACHE_DRIVER=redis
      - QUEUE_CONNECTION=redis
    networks:
      - app-network
    platform: linux/amd64
    security_opt:
      - no-new-privileges:true
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "php", "artisan", "inspire"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: .
      dockerfile: ./docker/prod.frontend.dockerfile
    container_name: spreetzitt-frontend-prod
    restart: unless-stopped
    networks:
      - app-network
    platform: linux/amd64
    security_opt:
      - no-new-privileges:true
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:3000",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:7-alpine
    container_name: spreetzitt-redis-prod
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD} --appendonly yes --appendfsync everysec
    volumes:
      - redis_data:/data
    networks:
      - app-network
    platform: linux/amd64
    security_opt:
      - no-new-privileges:true
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    sysctls:
      - net.core.somaxconn=1024

  meilisearch:
    image: getmeili/meilisearch:v1.5
    container_name: spreetzitt-meilisearch-prod
    restart: unless-stopped
    environment:
      - MEILI_MASTER_KEY=${MEILISEARCH_KEY}
      - MEILI_HTTP_ADDR=0.0.0.0:7700
      - MEILI_ENV=production
      - MEILI_LOG_LEVEL=INFO
    volumes:
      - meilisearch_data:/meili_data
    networks:
      - app-network
    platform: linux/amd64
    security_opt:
      - no-new-privileges:true
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:7700/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  app-network:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: spreetzitt-prod

volumes:
  meilisearch_data:
    driver: local
  redis_data:
    driver: local
  static_files:
    driver: local
  storage_data:
    driver: local
