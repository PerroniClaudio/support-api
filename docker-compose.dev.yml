services:
  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/default.dev.conf:/etc/nginx/conf.d/default.conf
      - ./sslcert:/etc/nginx/ssl
      - ./support-api:/var/www/html
    networks:
      - app-network
    depends_on:
      - backend
      - frontend
  backend:
    build:
      context: .
      dockerfile: ./docker/dev.backend.dockerfile
    restart: unless-stopped
    container_name: backend
    volumes:
      - ./php/supervisord.conf:/etc/supervisor/conf.d/supervisord.conf
      - ./support-api:/var/www/html
    environment:
      - APP_ENV=development
      - APP_DEBUG=true
      - REDIS_HOST=redis
      - MEILISEARCH_HOST=http://meilisearch:7700
    networks:
      - app-network
    platform: linux/amd64
  frontend:
    build:
      context: .
      dockerfile: ./docker/dev.frontend.dockerfile
    container_name: frontend
    restart: unless-stopped
    volumes:
      - ./frontend:/app
      - /app/node_modules # Volume anonimo per preservare node_modules
    ports:
      - "5173:5173"
    networks:
      - app-network
    platform: linux/amd64
  redis:
    image: redis:alpine
    container_name: ift_redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - app-network
    ports:
      - "6379:6379"
    platform: linux/amd64
  meilisearch:
    image: getmeili/meilisearch:latest
    container_name: ift_meilisearch
    restart: unless-stopped
    environment:
      - MEILI_MASTER_KEY=${MEILISEARCH_KEY}
      - MEILI_HTTP_ADDR=0.0.0.0:7700
    volumes:
      - meilisearch_data:/data.ms
    ports:
      - "7700:7700"
    networks:
      - app-network
    platform: linux/amd64

networks:
  app-network:
    driver: bridge
volumes:
  meilisearch_data:
  redis_data:
