version: "3.8"

services:
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /opt/spreetzitt/nginx/default.prod.conf:/etc/nginx/conf.d/default.conf:ro
      - /opt/spreetzitt/sslcert:/etc/nginx/ssl:ro
      - static_files:/var/www/html/public:ro
    networks:
      - app-network
    deploy:
      replicas: 2
      placement:
        constraints:
          - node.role == manager
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
        monitor: 30s
      rollback_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 60s
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:80/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  backend:
    image: ghcr.io/${GITHUB_REPOSITORY_OWNER}/spreetzitt-backend:${VERSION:-latest}
    volumes:
      - /opt/spreetzitt/php/supervisord.prod.conf:/etc/supervisor/conf.d/supervisord.conf:ro
      - static_files:/var/www/html/public
      - storage_data:/var/www/html/storage
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - APP_KEY=${APP_KEY}
      - DB_CONNECTION=${DB_CONNECTION:-mysql}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT:-3306}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - MEILISEARCH_HOST=http://meilisearch:7700
      - MEILISEARCH_KEY=${MEILISEARCH_KEY}
      - MAIL_MAILER=${MAIL_MAILER}
      - MAIL_HOST=${MAIL_HOST}
      - MAIL_PORT=${MAIL_PORT}
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - LOG_CHANNEL=stderr
      - SESSION_DRIVER=redis
      - CACHE_DRIVER=redis
      - QUEUE_CONNECTION=redis
    networks:
      - app-network
    deploy:
      replicas: 2
      update_config:
        parallelism: 1
        delay: 30s
        failure_action: rollback
        monitor: 60s
        order: start-first
      rollback_config:
        parallelism: 1
        delay: 30s
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      resources:
        limits:
          memory: 1G
          cpus: "0.5"
        reservations:
          memory: 512M
          cpus: "0.25"
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "5"
    healthcheck:
      test: ["CMD", "php", "artisan", "inspire"]
      interval: 30s
      timeout: 15s
      retries: 3
      start_period: 90s

  frontend:
    image: ghcr.io/${GITHUB_REPOSITORY_OWNER}/spreetzitt-frontend:${VERSION:-latest}
    networks:
      - app-network
    deploy:
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
        monitor: 30s
      rollback_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 60s
      resources:
        limits:
          memory: 512M
          cpus: "0.3"
        reservations:
          memory: 256M
          cpus: "0.1"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:3000",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:7-alpine
    command: redis-server --requirepass ${REDIS_PASSWORD} --appendonly yes --appendfsync everysec --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    networks:
      - app-network
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 60s
      resources:
        limits:
          memory: 256M
          cpus: "0.2"
        reservations:
          memory: 128M
          cpus: "0.1"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  meilisearch:
    image: getmeili/meilisearch:v1.5
    environment:
      - MEILI_MASTER_KEY=${MEILISEARCH_KEY}
      - MEILI_HTTP_ADDR=0.0.0.0:7700
      - MEILI_ENV=production
      - MEILI_LOG_LEVEL=INFO
      - MEILI_MAX_INDEXING_MEMORY=512Mb
    volumes:
      - meilisearch_data:/meili_data
    networks:
      - app-network
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 60s
      resources:
        limits:
          memory: 512M
          cpus: "0.3"
        reservations:
          memory: 256M
          cpus: "0.1"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:7700/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Servizio di monitoraggio dello stack
  healthcheck:
    image: alpine:latest
    command: |
      sh -c '
        while true; do
          echo "Stack health check at $$(date)"
          wget -q --spider http://nginx/health || echo "Nginx unhealthy"
          sleep 300
        done
      '
    networks:
      - app-network
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 30s
        max_attempts: 5
        window: 300s
      resources:
        limits:
          memory: 64M
          cpus: "0.1"
        reservations:
          memory: 32M

networks:
  app-network:
    driver: overlay
    attachable: true
    driver_opts:
      encrypted: "true"

volumes:
  meilisearch_data:
    driver: local
  redis_data:
    driver: local
  static_files:
    driver: local
  storage_data:
    driver: local

configs:
  nginx_config:
    file: /opt/spreetzitt/nginx/default.prod.conf
  supervisord_config:
    file: /opt/spreetzitt/php/supervisord.prod.conf

secrets:
  app_key:
    external: true
  redis_password:
    external: true
  meilisearch_key:
    external: true
